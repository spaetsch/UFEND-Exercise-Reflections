What happens when you initialize a repository? Why do you need to do it?

Git creates a metadata file about all the files in the directory but it does not yet take the first snapshot. It is laying the groundwork for the first commit.


How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is a intermediary location between the working directory, where you are doing your work, and the repository, which holds your finalized updates. The staging area allows you to bundle files together if they have a logical connection to create one coherent commit. 


How can you use the staging area to make sure you have one commit per logical change?

You can use git diff to compare the staging area to either the working directory or the repository to verify that you only have one commit per logical change.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?
You can use the branches to isolate experiments. you can work on the experiment until you determine whether it is worthwhile, without disturbing the functioning code. Later you can either easily merge this experiment into the main project, or you can easily abandon it and return to the main project, still in functioning condition.

How do the diagrams help you visualize the branch structure?
Diagrams help you see the connections between the files, so you know which files are reachable and which are not.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches together integrates their commits into one unified project. The branch apart-branch together diagram illustrates how the two branches were developed independently then united into a single commit.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Git is more efficient because it can compare the files for you and isolate the possible conflicts. Manually merging, however, absoltely guarantees Git will not make the wrong decision about merging changes.

